@model Shopweb.Models.Product
@using Shopweb.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    DBContext db = new DBContext();
    var lastpro = db.Products.OrderByDescending(p => p.product_id).FirstOrDefault();
    int newid = (lastpro == null ? 1 : (lastpro.product_id + 1));
}

<h2>Thêm mới sản phẩm</h2>
@ViewBag.data
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal",}))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("product_id", newid)
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.material, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.material, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.material, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.gender, new SelectList(new[] { "Nữ", "Nam", "Unisex" }), "Chọn giới tính", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.shape, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.shape, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.shape, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.category_id, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.category_id, ViewBag.category_id as SelectList, "Chọn danh mục", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Ảnh chính:</label>
        <div class="col-md-10">
            <img id="output" class="img-rounded" alt="Ảnh" width="180" src="~/Content/ImgShopKinh/a11.jpg" />
            <p><label for="mainImageFile" style="cursor:pointer">Chọn file ảnh</label></p>
            <input name="MainImageFile" id="mainImageFile" type="file" style="display:none" onchange="loadFile(event, 'output')" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gallery, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p><label for="galleryFiles" style="cursor:pointer">Chọn file ảnh</label></p>
            <input name="GalleryFiles" id="galleryFiles" type="file" style="display:none" multiple onchange="loadGalleryFiles(event)" />
            <div id="galleryPreview"></div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.eye_width, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.eye_width, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.eye_width, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.eye_lenth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.eye_lenth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.eye_lenth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InventoryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InventoryDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InventoryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.entryPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.entryPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.entryPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Tạo mới" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở về", "Index", null, new { @class = "btn btn-default" })
</div>

<script>
    var loadFile = function (event) {
        document.getElementById("output").src = URL.createObjectURL(event.target.files[0])
    };
    var loadGalleryFiles = function (event) {
        var galleryPreview = document.getElementById('galleryPreview');
        galleryPreview.innerHTML = '';
        for (var i = 0; i < event.target.files.length; i++) {
            var file = event.target.files[i];
            var img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.width = 150;
            img.className = 'img-rounded';
            img.style.marginRight = '10px';
            galleryPreview.appendChild(img);
        }
    };
</script>

