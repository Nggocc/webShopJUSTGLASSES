@model PagedList.IPagedList<Shopweb.Models.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "AllProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .product-card {
        border: 1px solid lightgrey;
        text-align: center;
        width: 270px;
        height: auto;
        padding: 10px; /* Padding inside the card */
        box-sizing: border-box; /* Ensure padding is included in the width and height */
    }

        .product-card img {
            width: 100%;
            height: 270px;
            margin-bottom: 10px; /* Space between image and next element */
        }

        .product-card a {
            text-align: center;
            display: block;
            margin-bottom: 10px; /* Space between links and other elements */
            color: inherit; /* Keep link color consistent */
            text-decoration: none; /* Remove underline from links */
        }

        .product-card p {
            text-align: center;
            margin: 0;
            padding: 0;
        }

    .dropdown select {
        font-size: 14px;
        width: 220px;
        height: 40px;
        float: left;
        border: 1px solid lightgray;
        color: gray;
        margin-bottom: 20px
    }
</style>
<div class="container">

    <div class="dropdown">
        <select name="sortOrder" onchange="handleChange(this.value)">
            <option value="date" @(ViewBag.SortOrder == "date" ? "selected" : "")>Sort by Date</option>
            <option value="name" @(ViewBag.SortOrder == "name" ? "selected" : "")>Sort by Name</option>
            <option value="price" @(ViewBag.SortOrder == "price" ? "selected" : "")>Sort by Price</option>
        </select>
    </div>
    <div class="row">
        @foreach (var item in Model)
        {

            <div class="col-sm-6 col-md-4 col-lg-3 mb-3 d-flex justify-content-start">
                <div class="product-card">
                    @{
                        string path = Url.Content("~/Content/Images/" + item.image);
                        string name = item.name?.ToUpper();
                        decimal giatien = (decimal)item.price;
                        string giaTienFormatted = giatien.ToString("#,##0") + " VND";
                    }

                    <a href="@Url.Action("Details", "Products", new { id = item.product_id })">
                        <img src="@path" alt="Product Image" />
                    </a>

                    <a href="@Url.Action("Details", "Products", new { id = item.product_id })" class="product-name-link">
                        @name
                    </a>

                    <p class="price" style="color: orange;"><b>@giaTienFormatted</b></p>
                </div>
            </div>

        }
    </div>
    <div>
        @Html.PagedListPager(Model, page => Url.Action("AllProducts", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
   }))
    </div>
</div>
<script>
    function handleChange(value) {
    var url = '@Url.Action("AllProducts")';
    var currentPage = '@Model.PageNumber';
        window.location.href = url + '?sortOrder=' + value + '&page=' + currentPage;
}
</script>


